<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="12/7/2022 1:00:06 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-35DOP16"
  DTS:CreatorName="DESKTOP-35DOP16\322ak"
  DTS:DTSID="{ABAFD053-1139-4668-B726-0F40303E41E6}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.948.0"
  DTS:LocaleID="2057"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:VersionBuild="43"
  DTS:VersionGUID="{C0116D6F-2467-464A-9F2C-709353C9B52B}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[localhost.SpotifyDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{B874EEFB-7FE8-42E5-B73F-F625A4CA7C7F}"
      DTS:ObjectName="localhost.SpotifyDB">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=localhost;Initial Catalog=SpotifyDB;Provider=SQLNCLI11.1;Integrated Security=SSPI;Application Name=SSIS-Package1-{B874EEFB-7FE8-42E5-B73F-F625A4CA7C7F}localhost.SpotifyDB;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[localhost.SpotifyDW]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{C6087283-8691-4889-8553-A985A9DFC5FA}"
      DTS:ObjectName="localhost.SpotifyDW">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=localhost;Initial Catalog=SpotifyDW;Provider=SQLNCLI11.1;Integrated Security=SSPI;Application Name=SSIS-Package1-{C6087283-8691-4889-8553-A985A9DFC5FA}localhost.SpotifyDW;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Populating MusicLabel Table"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{D65EF362-1AB6-4EAE-B8FD-D3E5C53C93E5}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Populating MusicLabel Table"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Populating MusicLabel Table\Converting ints to String"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Converting ints to String"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_cbf59ff7ee5047dd9e09924ec867af73")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_cbf59ff7ee5047dd9e09924ec867af73")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        if (Row.NumberOfSongs_IsNull)
            Row.numSongs_IsNull = true;
        else if (Row.NumberOfSongs < 1000)
            Row.numSongs = "LITTLE";
        else if (Row.NumberOfSongs <= 5000)
            Row.numSongs = "NORMAL";
        else if (Row.NumberOfSongs > 5000)
            Row.numSongs = "A LOT";

        if (Row.NumberOfArtists_IsNull)
            Row.numArtists_IsNull = true;
        else if (Row.NumberOfArtists < 100)
            Row.numArtists = "LITTLE";
        else if (Row.NumberOfArtists <= 500)
            Row.numArtists = "NORMAL";
        else if (Row.NumberOfArtists > 500)
            Row.numArtists = "A LOT";


        if (Row.CostOfContract_IsNull)
            Row.costContr_IsNull = true;
        else if (Row.CostOfContract < 10000)
            Row.costContr = "CHEAP";
        else if (Row.CostOfContract <= 50000)
            Row.costContr = "NORMAL";
        else if (Row.CostOfContract > 50000)
            Row.costContr = "EXPENSIVE";
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 NumberOfSongs
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool NumberOfSongs_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 NumberOfArtists
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[1]);
        }
    }
    public bool NumberOfArtists_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Double CostOfContract
    {
        get
        {
            return Buffer.GetDouble(BufferColumnIndexes[2]);
        }
    }
    public bool CostOfContract_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String numSongs
    {
        set
        {
            this[3] = value;
        }
    }
    public bool numSongs_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String numArtists
    {
        set
        {
            this[4] = value;
        }
    }
    public bool numArtists_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String costContr
    {
        set
        {
            this[5] = value;
        }
    }
    public bool costContr_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_cbf59ff7ee5047dd9e09924ec867af73.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{60c6d9eb-49ac-4da9-8a39-c7847fc52439}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_cbf59ff7ee5047dd9e09924ec867af73</RootNamespace>
    <AssemblyName>SC_cbf59ff7ee5047dd9e09924ec867af73</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_cbf59ff7ee5047dd9e09924ec867af73" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_cbf59ff7ee5047dd9e09924ec867af73</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_cbf59ff7ee5047dd9e09924ec867af73</msb:DisplayName>
    <msb:ProjectId>{E5572F67-ED7F-4823-944C-0DDBBB8E96EC}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_cbf59ff7ee5047dd9e09924ec867af73.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_cbf59ff7ee5047dd9e09924ec867af73.Properties.Settings.get_Default():SC_cbf59ff7ee5047dd9e09924ec867af73.Properties.Sett" +
    "ings")]

namespace SC_cbf59ff7ee5047dd9e09924ec867af73.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_cbf59ff7ee5047dd9e09924ec867af73.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_cbf59ff7ee5047dd9e09924ec867af73.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_cbf59ff7ee5047dd9e09924ec867af73.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_cbf59ff7ee5047dd9e09924ec867af73.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_cbf59ff7ee5047dd9e09924ec867af73.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_cbf59ff7ee5047dd9e09924ec867af73.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPtTkmMAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAKjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANg0AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAMBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAM
NQAAAAAAAEgAAAACAAUAQCMAAOAQAAABAAAAAAAAACA0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAIAHgEAAAAAAAADbwcAAAYs
CQMXbw0AAAYrTANvBgAABiDoAwAALw0DcgEAAHBvDAAABisyA28GAAAGIIgTAAAwDQNyDwAAcG8M
AAAGKxgDbwYAAAYgiBMAADELA3IdAABwbwwAAAYDbwkAAAYsCQMXbw8AAAYrSQNvCAAABh9kLw0D
cgEAAHBvDgAABisyA28IAAAGIPQBAAAwDQNyDwAAcG8OAAAGKxgDbwgAAAYg9AEAADELA3IdAABw
bw4AAAYDbwsAAAYsCAMXbxEAAAYqA28KAAAGIwAAAAAAiMNANAwDcikAAHBvEAAABioDbwoAAAYj
AAAAAABq6EA1DANyDwAAcG8QAAAGKgNvCgAABiMAAAAAAGroQDYLA3I1AABwbxAAAAYqHgIoFAAA
BioqAgMEBSgSAAAKKlICexMAAAoCexQAAAoWlG8VAAAKKiICFigWAAAKKlICexMAAAoCexQAAAoX
lG8VAAAKKiICFygWAAAKKlICexMAAAoCexQAAAoYlG8XAAAKKiICGCgWAAAKKiYCGQMoGAAACipa
AywIAhkoGQAACipySQAAcHMaAAAKeiYCGgMoGAAACipaAywIAhooGQAACipySQAAcHMaAAAKeiYC
GwMoGAAACipaAywIAhsoGQAACipySQAAcHMaAAAKeh4CKBsAAAoqHgIoHAAACip+AigdAAAKAgJz
GAAABn0BAAAEAgJzGQAABn0CAAAEKpIEcuYAAHAabx4AAAosFQIFAgMoHwAACg4EcwUAAAZvFgAA
BipKKwcCA28XAAAGA28SAAAGLfEqBio6AiggAAAKAgN9AwAABCo6AiggAAAKAgN9BAAABCoeAigg
AAAKKq5+BQAABC0ecvYAAHDQBwAAAighAAAKbyIAAApzIwAACoAFAAAEfgUAAAQqGn4GAAAEKh4C
gAYAAAQqGn4HAAAEKh4CKCQAAAoqLnMfAAAGgAcAAAQqQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAz
MTkAAAAABQBsAAAAVAYAACN+AADABgAA9AYAACNTdHJpbmdzAAAAALQNAABoAQAAI1VTABwPAAAQ
AAAAI0dVSUQAAAAsDwAAtAEAACNCbG9iAAAAAAAAAAIAAAFXFaABCQEAAAD6ATMAFgAAAQAAAB8A
AAAIAAAABwAAACAAAAATAAAAJAAAABAAAAADAAAADwAAABAAAAABAAAABAAAAAEAAAAAAP0CAQAA
AAAABgD3AdcEBgCLAtcEBgBDAcQEDwBLBQAABgBwAQsEBgDaAQsEBgC7AQsEBgByAgsEBgAXAgsE
BgAwAgsEBgCHAQsEBgCiAcYCCgBLApAACgCIBJAADgB5BJAACgBUBJAACgBmBpAABgApBsMDBgAm
AcQEBgCZBPcEBgBIBPYDEgD2AOcCEgBXAecCEgDeAOEDBgALAdcEBgAdBMMDBgDgAsMDBgA3BMMD
BgCxAMMDBgBiAMMDBgDrBgsEAAAAAC4AAAAAAAEAAQABABAA1gMAABAAAQABAAEAEABsBAAAOQAB
AAUAAQAQAEgGAABFAAEAFAABABAA5wUAAEkAAwAYAAEAEACJBQAASQAEABkAAAAQAP4EWgVJAAUA
GgAAARAAuAVaBWEABwAeAAYA5wV4AAYAiQV8AAEAVgaAAAEAVgaAABEAygOEABEAzgCIABEASACM
AFAgAAAAAMYAqQIGAAEAWCAAAAAAxgC0AgYAAQBgIAAAAADGAMgGkAABAIohAAAAAIYYqQQGAAIA
kiEAAAAAhhipBBsAAgCdIQAAAACGCMEFlgAFALIhAAAAAIYIOgNCAAUAuyEAAAAAhgjzBZYABQDQ
IQAAAACGCGcDQgAFANkhAAAAAIYIFgaaAAUA7iEAAAAAhgiYA0IABQD3IQAAAACGCNMFEAAFAAEi
AAAAAIYIUwOeAAYAGCIAAAAAhggHBhAABwAiIgAAAACGCIIDngAIADkiAAAAAIYItgQQAAkAQyIA
AAAAhgglA54ACgBaIgAAAACGAN8GQgALAGIiAAAAAIYAMAZCAAsAaiIAAAAAhhipBAYACwCKIgAA
AADGALsGowALAK8iAAAAAMYBtAaQAA8AwiIAAAAAxgHIBpAAEADEIgAAAACGGKkErQARANMiAAAA
AIYYqQStABIA4iIAAAAAgxipBAYAEwDqIgAAAACTCJUEswATABYjAAAAAJMItgC4ABMAHSMAAAAA
kwjCAL0AEwAlIwAAAACWCDwGwwAUACwjAAAAAIYYqQQGABQANCMAAAAAkRivBMgAFAAAAAEA4wYA
AAEAjgQAAAIAkwUAAAMAYgQAAAEAwAIAAAEAwAIAAAEAwAIAAAEAwAIAAAEAwAIAAAEAwAIAAAEA
NwAAAAIAhgAAAAMAjgQAAAQAYgQAAAEAjgQAAAEA4wYAAAEAbAYAAAEAbAYAAAEAwAIJAKkEAQAR
AKkEBgAZAKkECgApAKkEEAAxAKkEEAA5AKkEEABBAKkEEABJAKkEEABRAKkEEABZAKkEEABhAKkE
EABpAKkEBgCZAKkEBgC5AKkEFQDJAKkEBgCJAKkCBgCJALQCBgBxAKkEGwBxAI4EJQBxAJMFKQB5
AAEALQBxAKsDMgB5AFgANwBxALoDPABxALIDAQDRAKkEEABxAN8GQgBxADAGQgCJAKkEBgDZAOAF
RgCJAKcFTQCRAKkEBgDpAHQAUwDpAOcGWgChAKkEXwDBAKkEBgAuAAsA6wAuABMA9AAuABsAEwEu
ACMAHAEuACsARQEuADMARQEuADsARQEuAEMAHAEuAEsASwEuAFMARQEuAFsAYgFDAGMArAHhAHsA
rAHjAGsArAGpAXMAEwHJAXMAEwEDAAEABwANAAgADwAAAMUFzAAAAD4D0AAAAPcFzAAAAGsD0AAA
ABoG1AAAAJwD0AAAANcF2AAAAFcD0AAAAAsG2AAAAIYD0AAAALoE2AAAACkD0AAAAJkE3AAAANYA
4QAAAEAG5gACAAYAAwACAAcABQACAAgABwACAAkACQACAAoACwACAAsADQABAAwADwABAA0AEQAB
AA4AEwABAA8AFQABABAAFwABABEAGQACABsAGwACABwAHQABAB0AHQACAB4AHwAEgAAAAQAAAAAA
AAAAAAAAAAAKAAAABAAAAAAAAAAAAAAAZgA/AAAAAAAPAAAAAAAAAAAAAABvAHYGAAAAAA8AAAAA
AAAAAAAAAG8AkwYAAAAABAAAAAAAAAAAAAAAZgDDAwAAAAAAAAAAAQAAAAgFAAAAAAAAAEdldElu
dDMyAFNDX2NiZjU5ZmY3ZWU1MDQ3ZGQ5ZTA5OTI0ZWM4NjdhZjczADxNb2R1bGU+AElucHV0SUQA
bXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAEdldERvdWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRU
eXBlRnJvbUhhbmRsZQBJbnB1dE5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUA
VHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25T
ZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1
dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRv
ckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVt
YXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRp
b25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4
YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdo
dEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJs
eUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0
ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFN0cmluZwBTeXN0
ZW0uQ29tcG9uZW50TW9kZWwAU0NfY2JmNTlmZjdlZTUwNDdkZDllMDk5MjRlYzg2N2FmNzMuZGxs
AHNldF9jb3N0Q29udHJfSXNOdWxsAGdldF9OdW1iZXJPZlNvbmdzX0lzTnVsbABzZXRfbnVtU29u
Z3NfSXNOdWxsAGdldF9OdW1iZXJPZkFydGlzdHNfSXNOdWxsAHNldF9udW1BcnRpc3RzX0lzTnVs
bABnZXRfQ29zdE9mQ29udHJhY3RfSXNOdWxsAFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAHJlc291
cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRp
b24AU3lzdGVtLlJlZmxlY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTdHJpbmdDb21w
YXJpc29uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAElucHV0MEJ1ZmZlcgBQ
aXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0
b3IAc2V0X2Nvc3RDb250cgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGls
ZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDX2NiZjU5ZmY3ZWU1MDQ3ZGQ5ZTA5OTI0ZWM4
NjdhZjczLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ19j
YmY1OWZmN2VlNTA0N2RkOWUwOTkyNGVjODY3YWY3My5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZm
ZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MAZ2V0X051bWJlck9mU29u
Z3MAc2V0X251bVNvbmdzAEVxdWFscwBDb25uZWN0aW9ucwBnZXRfTnVtYmVyT2ZBcnRpc3RzAHNl
dF9udW1BcnRpc3RzAGdldF9Db3N0T2ZDb250cmFjdABPYmplY3QARW5kT2ZSb3dzZXQAZ2V0X0Rl
ZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QA
SW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAZ2V0X0Fz
c2VtYmx5AAANTABJAFQAVABMAEUAAA1OAE8AUgBNAEEATAAAC0EAIABMAE8AVAAAC0MASABFAEEA
UAAAE0UAWABQAEUATgBTAEkAVgBFAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAA
YwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBn
AG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQA
ZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAAHFTAEMAXwBjAGIAZgA1ADkAZgBmADcAZQBlADUAMAA0
ADcAZABkADkAZQAwADkAOQAyADQAZQBjADgANgA3AGEAZgA3ADMALgBQAHIAbwBwAGUAcgB0AGkA
ZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAALuLm+gSs0JIptiYmLyQcJQABCABAQgDIAABBSABARER
BCABAQ4FIAEBEVkJIAMBEj0dCBJBAwYSPQMGHQgEIAEICAQgAQIIBCABDQgFIAIBCBwDIAACBiAC
Ag4RcQUgAR0ICAYAARJ1EXkEIAASfQYgAgEOEn0It3pcVhk04IkIiYRdzYCAzJEDBhIUAwYSGAMG
EkUDBhJRAwYSVQMGEiAFIAEBEgwDIAAIAyAADQQgAQECCSAEAQgOEj0SQQUgAQESRQQAABJRBAAA
ElUFAAEBElUEAAASIAMAAAEDKAAIAygAAgMoAA0DKAAOBAgAElEECAASVQQIABIgCAEACAAAAAAA
HgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ19jYmY1OWZmN2Vl
NTA0N2RkOWUwOTkyNGVjODY3YWY3MwAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIyAABJAQAa
Lk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQg
RnJhbWV3b3JrIDQuNwQBAAAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJl
c291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWws
IFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1l
UmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAAA1AAAAAAAAAAAAABo1AAAAIAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAMNQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAA
AAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfAGMAYgBmADUAOQBmAGYANwBlAGUANQAwADQANwBkAGQAOQBlADAAOQA5ADIANABlAGMA
OAA2ADcAYQBmADcAMwAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AYwBiAGYANQA5AGYA
ZgA3AGUAZQA1ADAANAA3AGQAZAA5AGUAMAA5ADkAMgA0AGUAYwA4ADYANwBhAGYANwAzAC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAyADIAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBjAGIA
ZgA1ADkAZgBmADcAZQBlADUAMAA0ADcAZABkADkAZQAwADkAOQAyADQAZQBjADgANgA3AGEAZgA3
ADMALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AYwBiAGYA
NQA5AGYAZgA3AGUAZQA1ADAANAA3AGQAZAA5AGUAMAA5ADkAMgA0AGUAYwA4ADYANwBhAGYANwAz
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAAsNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_cbf59ff7ee5047dd9e09924ec867af73</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">EE</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populating MusicLabel Table\Converting ints to String.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\Converting ints to String.Inputs[Input 0].Columns[NumberOfSongs]"
                      cachedDataType="i4"
                      cachedName="NumberOfSongs"
                      lineageId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[NumberOfSongs]" />
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\Converting ints to String.Inputs[Input 0].Columns[NumberOfArtists]"
                      cachedDataType="i4"
                      cachedName="NumberOfArtists"
                      lineageId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[NumberOfArtists]" />
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\Converting ints to String.Inputs[Input 0].Columns[CostOfContract]"
                      cachedDataType="r8"
                      cachedName="CostOfContract"
                      lineageId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[CostOfContract]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populating MusicLabel Table\Converting ints to String.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Populating MusicLabel Table\Converting ints to String.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\Converting ints to String.Outputs[Output 0].Columns[numSongs]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Populating MusicLabel Table\Converting ints to String.Outputs[Output 0].Columns[numSongs]"
                      name="numSongs" />
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\Converting ints to String.Outputs[Output 0].Columns[numArtists]"
                      codePage="1250"
                      dataType="str"
                      length="100"
                      lineageId="Package\Populating MusicLabel Table\Converting ints to String.Outputs[Output 0].Columns[numArtists]"
                      name="numArtists" />
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\Converting ints to String.Outputs[Output 0].Columns[costContr]"
                      codePage="1250"
                      dataType="str"
                      length="100"
                      lineageId="Package\Populating MusicLabel Table\Converting ints to String.Outputs[Output 0].Columns[costContr]"
                      name="costContr" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populating MusicLabel Table\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Populating MusicLabel Table\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\Derived Column.Inputs[Derived Column Input].Columns[CreationDate]"
                      cachedDataType="dbTimeStamp"
                      cachedName="CreationDate"
                      lineageId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[CreationDate]" />
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\Derived Column.Inputs[Derived Column Input].Columns[ContractStart]"
                      cachedDataType="dbTimeStamp"
                      cachedName="ContractStart"
                      lineageId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[ContractStart]" />
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\Derived Column.Inputs[Derived Column Input].Columns[ContractEnd]"
                      cachedDataType="dbTimeStamp"
                      cachedName="ContractEnd"
                      lineageId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[ContractEnd]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Populating MusicLabel Table\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[LabelCreationDay]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[LabelCreationDay]"
                      name="LabelCreationDay"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DATEPART]("Dd",(DT_DBDATE)#{Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[CreationDate]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DATEPART("Dd",(DT_DBDATE)CreationDate)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[LabelCreationYear]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[LabelCreationYear]"
                      name="LabelCreationYear"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DATEPART]("yyyy",(DT_DBDATE)#{Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[CreationDate]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DATEPART("yyyy",(DT_DBDATE)CreationDate)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[LabelCreationMonth]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[LabelCreationMonth]"
                      name="LabelCreationMonth"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DATEPART]("Mm",(DT_DBDATE)#{Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[CreationDate]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DATEPART("Mm",(DT_DBDATE)CreationDate)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[ContractStartDay]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[ContractStartDay]"
                      name="ContractStartDay"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DATEPART]("Dd",(DT_DBDATE)#{Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[ContractStart]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DATEPART("Dd",(DT_DBDATE)ContractStart)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[ContractStartMonth]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[ContractStartMonth]"
                      name="ContractStartMonth"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DATEPART]("Mm",(DT_DBDATE)#{Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[ContractStart]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DATEPART("Mm",(DT_DBDATE)ContractStart)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[ContractStartYear]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[ContractStartYear]"
                      name="ContractStartYear"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DATEPART]("yyyy",(DT_DBDATE)#{Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[ContractStart]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DATEPART("yyyy",(DT_DBDATE)ContractStart)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[ContractEndDay]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[ContractEndDay]"
                      name="ContractEndDay"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DATEPART]("Dd",(DT_DBDATE)#{Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[ContractEnd]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DATEPART("Dd",(DT_DBDATE)ContractEnd)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[ContractEndMonth]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[ContractEndMonth]"
                      name="ContractEndMonth"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DATEPART]("Mm",(DT_DBDATE)#{Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[ContractEnd]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DATEPART("Mm",(DT_DBDATE)ContractEnd)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[ContractEndYear]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[ContractEndYear]"
                      name="ContractEndYear"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DATEPART]("yyyy",(DT_DBDATE)#{Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[ContractEnd]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DATEPART("yyyy",(DT_DBDATE)ContractEnd)</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Populating MusicLabel Table\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populating MusicLabel Table\Drop Old values"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Drop Old values"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[MusicLabel]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[MusicLabel]) [refTable]
where [refTable].[Main_Genre] = ? and [refTable].[Number_Of_Songs] = ? and [refTable].[Number_Of_Artists] = ? and [refTable].[Cost_Of_Contract] = ? and [refTable].[ID_Creation_Date] = ? and [refTable].[ID_Contract_Start] = ? and [refTable].[ID_Contract_End] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="LabelID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Label_Name" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1250"/&gt;&lt;referenceColumn name="Main_Genre" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1250"/&gt;&lt;referenceColumn name="Number_Of_Songs" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1250"/&gt;&lt;referenceColumn name="ID_Creation_Date" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ID_Contract_Start" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ID_Contract_End" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Number_Of_Artists" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1250"/&gt;&lt;referenceColumn name="Cost_Of_Contract" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1250"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[MainGenre]};#{Package\Populating MusicLabel Table\Converting ints to String.Outputs[Output 0].Columns[numSongs]};#{Package\Populating MusicLabel Table\Converting ints to String.Outputs[Output 0].Columns[numArtists]};#{Package\Populating MusicLabel Table\Converting ints to String.Outputs[Output 0].Columns[costContr]};#{Package\Populating MusicLabel Table\Retrieving CreationDate ID.Outputs[Lookup Match Output].Columns[Creation Date DW ID]};#{Package\Populating MusicLabel Table\Retrieving ContractStartDate ID.Outputs[Lookup Match Output].Columns[Contract Start Date DW ID]};#{Package\Populating MusicLabel Table\Retrieving ContractEndDate ID.Outputs[Lookup Match Output].Columns[Contract End Date DW ID]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populating MusicLabel Table\Drop Old values.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[localhost.SpotifyDW]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost.SpotifyDW]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Populating MusicLabel Table\Drop Old values.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\Drop Old values.Inputs[Lookup Input].Columns[Creation Date DW ID]"
                      cachedDataType="i4"
                      cachedName="Creation Date DW ID"
                      lineageId="Package\Populating MusicLabel Table\Retrieving CreationDate ID.Outputs[Lookup Match Output].Columns[Creation Date DW ID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ID_Creation_Date</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\Drop Old values.Inputs[Lookup Input].Columns[costContr]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="costContr"
                      lineageId="Package\Populating MusicLabel Table\Converting ints to String.Outputs[Output 0].Columns[costContr]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">Cost_Of_Contract</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\Drop Old values.Inputs[Lookup Input].Columns[numArtists]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="numArtists"
                      lineageId="Package\Populating MusicLabel Table\Converting ints to String.Outputs[Output 0].Columns[numArtists]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">Number_Of_Artists</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\Drop Old values.Inputs[Lookup Input].Columns[MainGenre]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="MainGenre"
                      lineageId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[MainGenre]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">Main_Genre</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\Drop Old values.Inputs[Lookup Input].Columns[numSongs]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="numSongs"
                      lineageId="Package\Populating MusicLabel Table\Converting ints to String.Outputs[Output 0].Columns[numSongs]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">Number_Of_Songs</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\Drop Old values.Inputs[Lookup Input].Columns[Contract Start Date DW ID]"
                      cachedDataType="i4"
                      cachedName="Contract Start Date DW ID"
                      lineageId="Package\Populating MusicLabel Table\Retrieving ContractStartDate ID.Outputs[Lookup Match Output].Columns[Contract Start Date DW ID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ID_Contract_Start</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\Drop Old values.Inputs[Lookup Input].Columns[Contract End Date DW ID]"
                      cachedDataType="i4"
                      cachedName="Contract End Date DW ID"
                      lineageId="Package\Populating MusicLabel Table\Retrieving ContractEndDate ID.Outputs[Lookup Match Output].Columns[Contract End Date DW ID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ID_Contract_End</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populating MusicLabel Table\Drop Old values.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Populating MusicLabel Table\Drop Old values.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Populating MusicLabel Table\Drop Old values.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Populating MusicLabel Table\Drop Old values.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Populating MusicLabel Table\Drop Old values.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Populating MusicLabel Table\Drop Old values.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\Drop Old values.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populating MusicLabel Table\Drop Old values.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\Drop Old values.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populating MusicLabel Table\Drop Old values.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populating MusicLabel Table\Month to str"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Month to str"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        if (Row.LabelCreationMonth_IsNull)
        {
            Row.LabelCreationMonthStr_IsNull = true;
        }
        else
        {
            Row.LabelCreationMonthStr = MonthAssign(Row.LabelCreationMonth);
        }

        if (Row.ContractStartMonth_IsNull)
        {
            Row.ContractStartMonthStr_IsNull = true;
        }
        else
        {
            Row.ContractStartMonthStr = MonthAssign(Row.ContractStartMonth);
        }

        if (Row.ContractEndMonth_IsNull)
        {
            Row.ContractEndMonthStr_IsNull = true;
        }
        else
        {
            Row.ContractEndMonthStr = MonthAssign(Row.ContractEndMonth);
        }
    }

    public string MonthAssign(int monthNo)
    {
        string monthStr;
        switch (monthNo)
        {
            case 1:
                monthStr = "January";
                break;
            case 2:
                monthStr = "February";
                break;
            case 3:
                monthStr = "March";
                break;
            case 4:
                monthStr = "April";
                break;
            case 5:
                monthStr = "May";
                break;
            case 6:
                monthStr = "June";
                break;
            case 7:
                monthStr = "July";
                break;
            case 8:
                monthStr = "August";
                break;
            case 9:
                monthStr = "September";
                break;
            case 10:
                monthStr = "October";
                break;
            case 11:
                monthStr = "November";
                break;
            default:
                monthStr = "December";
                break;
        }
        return monthStr;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 LabelCreationMonth
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool LabelCreationMonth_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 ContractStartMonth
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[1]);
        }
    }
    public bool ContractStartMonth_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Int32 ContractEndMonth
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[2]);
        }
    }
    public bool ContractEndMonth_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String LabelCreationMonthStr
    {
        set
        {
            this[3] = value;
        }
    }
    public bool LabelCreationMonthStr_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ContractStartMonthStr
    {
        set
        {
            this[4] = value;
        }
    }
    public bool ContractStartMonthStr_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ContractEndMonthStr
    {
        set
        {
            this[5] = value;
        }
    }
    public bool ContractEndMonthStr_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a873ca91a6fc4f75b087fc0edd9ae2c4.Properties.Settings.get_Default():SC_a873ca91a6fc4f75b087fc0edd9ae2c4.Properties.Sett" +
    "ings")]

namespace SC_a873ca91a6fc4f75b087fc0edd9ae2c4.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_a873ca91a6fc4f75b087fc0edd9ae2c4</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_a873ca91a6fc4f75b087fc0edd9ae2c4</msb:DisplayName>
    <msb:ProjectId>{55E0DD3B-2B1C-432E-8D9E-73B5B7E45667}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_a873ca91a6fc4f75b087fc0edd9ae2c4.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_a873ca91a6fc4f75b087fc0edd9ae2c4")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_a873ca91a6fc4f75b087fc0edd9ae2c4")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_a873ca91a6fc4f75b087fc0edd9ae2c4.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{1c5367f9-e2c0-4689-9f88-41c15ac2f6bc}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_a873ca91a6fc4f75b087fc0edd9ae2c4</RootNamespace>
    <AssemblyName>SC_a873ca91a6fc4f75b087fc0edd9ae2c4</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_a873ca91a6fc4f75b087fc0edd9ae2c4" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a873ca91a6fc4f75b087fc0edd9ae2c4.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a873ca91a6fc4f75b087fc0edd9ae2c4.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a873ca91a6fc4f75b087fc0edd9ae2c4.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_a873ca91a6fc4f75b087fc0edd9ae2c4.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_a873ca91a6fc4f75b087fc0edd9ae2c4.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_a873ca91a6fc4f75b087fc0edd9ae2c4.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJ1rkmMAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAA8jUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAKA1AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA+BUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADU
NQAAAAAAAEgAAAACAAUAMCMAALgRAAABAAAAAAAAAOg0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAMAaQAAAAAAAAADbwgAAAYs
CQMXbw4AAAYrEgMCA28HAAAGKAQAAAZvDQAABgNvCgAABiwJAxdvEAAABisSAwIDbwkAAAYoBAAA
Bm8PAAAGA28MAAAGLAgDF28SAAAGKgMCA28LAAAGKAQAAAZvEQAABioAAAATMAIAlgAAAAEAABED
F1lFCwAAAAIAAAAKAAAAEgAAABoAAAAiAAAAKgAAADIAAAA6AAAAQgAAAEoAAABSAAAAK1hyAQAA
cAorVnIRAABwCitOciMAAHAKK0ZyLwAAcAorPnI7AABwCis2ckMAAHAKKy5yTQAAcAorJnJXAABw
CisecmUAAHAKKxZyeQAAcAorDnKJAABwCisGcpsAAHAKBioeAigVAAAGKioCAwQFKBIAAAoqUgJ7
EwAACgJ7FAAAChaUbxUAAAoqIgIWKBYAAAoqUgJ7EwAACgJ7FAAACheUbxUAAAoqIgIXKBYAAAoq
UgJ7EwAACgJ7FAAAChiUbxUAAAoqIgIYKBYAAAoqJgIZAygXAAAKKloDLAgCGSgYAAAKKnKtAABw
cxkAAAp6JgIaAygXAAAKKloDLAgCGigYAAAKKnKtAABwcxkAAAp6JgIbAygXAAAKKloDLAgCGygY
AAAKKnKtAABwcxkAAAp6HgIoGgAACioeAigbAAAKKn4CKBwAAAoCAnMZAAAGfQEAAAQCAnMaAAAG
fQIAAAQqkgRySgEAcBpvHQAACiwVAgUCAygeAAAKDgRzBgAABm8XAAAGKkorBwIDbxgAAAYDbxMA
AAYt8SoGKjoCKB8AAAoCA30DAAAEKjoCKB8AAAoCA30EAAAEKh4CKB8AAAoqrn4FAAAELR5yWgEA
cNAHAAACKCAAAApvIQAACnMiAAAKgAUAAAR+BQAABCoafgYAAAQqHgKABgAABCoafgcAAAQqHgIo
IwAACioucyAAAAaABwAABCpCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAABoBgAA
I34AANQGAABYBwAAI1N0cmluZ3MAAAAALA4AAMwBAAAjVVMA+A8AABAAAAAjR1VJRAAAAAgQAACw
AQAAI0Jsb2IAAAAAAAAAAgAAAVcVogEJAQAAAPoBMwAWAAABAAAAHwAAAAgAAAAHAAAAIQAAABQA
AAAjAAAAEAAAAAEAAAADAAAADwAAABAAAAABAAAABAAAAAEAAAAAADYDAQAAAAAABgDtAY4FBgCB
Ao4FBgA5AXsFDwACBgAABgBmAXwEBgDQAXwEBgCxAXwEBgBoAnwEBgANAnwEBgAmAnwEBgB9AXwE
BgCYAbwCCgBBAoYACgABBYYADgDyBIYACgDNBIYACgDIBoYABgCLBigEBgAcAXsFBgASBa4FBgDB
BGcEEgDsACADEgBNASADEgDUAFIEBgABAY4FBgCOBCgEBgDWAigEBgCoBCgEBgCnACgEBgBYACgE
BgBNB3wEAAAAAC4AAAAAAAEAAQABABAARwQAABAAAQABAAEAEADlBAAAOQABAAYAAQAQAKoGAABF
AAEAFQABABAAfwYAAEkAAwAZAAEAEABABgAASQAEABoAAAAQALUFEQZJAAUAGwAAARAAbwYRBmEA
BwAfAAYAfwZ3AAYAQAZ7AAEAuAZ/AAEAuAZ/ABEALwSDABEAxACHABEASACLAFAgAAAAAMYAnwIG
AAEAWCAAAAAAxgCqAgYAAQBgIAAAAADGACoHjwABANggAAAAAIYAOwSVAAIAeiEAAAAAhhgiBQYA
AwCCIQAAAACGGCIFHwADAI0hAAAAAIYI8gKaAAYAoiEAAAAAhgh6A0EABgCrIQAAAACGCAkDmgAG
AMAhAAAAAIYImANBAAYAySEAAAAAhgjdApoABgDeIQAAAACGCF4DQQAGAOchAAAAAIYIRwUQAAYA
8SEAAAAAhgjVA54ABwAIIgAAAACGCGEFEAAIABIiAAAAAIYI9gOeAAkAKSIAAAAAhggvBRAACgAz
IgAAAACGCLYDngALAEoiAAAAAIYAQQdBAAwAUiIAAAAAhgCSBkEADABaIgAAAACGGCIFBgAMAHoi
AAAAAMYAHQejAAwAnyIAAAAAxgEWB48AEACyIgAAAADGASoHjwARALQiAAAAAIYYIgWtABIAwyIA
AAAAhhgiBa0AEwDSIgAAAACDGCIFBgAUANoiAAAAAJMIDgWzABQABiMAAAAAkwisALgAFAANIwAA
AACTCLgAvQAUABUjAAAAAJYIngbDABUAHCMAAAAAhhgiBQYAFQAkIwAAAACRGCgFyAAVAAAAAQBF
BwAAAQC5BAAAAQAHBQAAAgBKBgAAAwDbBAAAAQC2AgAAAQC2AgAAAQC2AgAAAQC2AgAAAQC2AgAA
AQC2AgAAAQA3AAAAAgB8AAAAAwAHBQAABADbBAAAAQAHBQAAAQBFBwAAAQDOBgAAAQDOBgAAAQC2
AgkAIgUBABEAIgUGABkAIgUKACkAIgUQADEAIgUQADkAIgUQAEEAIgUQAEkAIgUQAFEAIgUQAFkA
IgUQAGEAIgUQAGkAIgUGAJkAIgUGALkAIgUVAMkAIgUGAIkAnwIGAIkAqgIGAHEAIgUfAHEABwUp
AHEASgYtAHkAAQAxAHEAEAQ2AHEAHwQ7AHEAFwQBANEAIgUQAHEAQQdBAHEAkgZBAIkAIgUGANkA
eAZFAIkAXgZMAJEAIgUGAOkAagBSAOkASQdZAKEAIgVeAMEAIgUGAC4ACwDnAC4AEwDwAC4AGwAP
AS4AIwAYAS4AKwBBAS4AMwBBAS4AOwBBAS4AQwAYAS4ASwBHAS4AUwBBAS4AWwBeAUMAYwCoAeEA
ewCoAeMAawCoAakBcwAPAckBcwAPARsAAwABAAcADQAIAA8AAAD2AswAAAB+A9AAAAANA8wAAACc
A9AAAADhAswAAABiA9AAAABLBdQAAADZA9AAAABlBdQAAAD6A9AAAAAzBdQAAAC6A9AAAAASBdgA
AADMAN0AAACiBuIAAgAHAAMAAgAIAAUAAgAJAAcAAgAKAAkAAgALAAsAAgAMAA0AAQANAA8AAQAO
ABEAAQAPABMAAQAQABUAAQARABcAAQASABkAAgAcABsAAgAdAB0AAQAeAB0AAgAfAB8ABIAAAAEA
AAAAAAAAAAAAAAAACgAAAAQAAAAAAAAAAAAAAGUAPwAAAAAADwAAAAAAAAAAAAAAbgDYBgAAAAAP
AAAAAAAAAAAAAABuAPUGAAAAAAQAAAAAAAAAAAAAAGUAKAQAAAAAAAAAAAEAAAC/BQAAAAAAAABH
ZXRJbnQzMgBTQ19hODczY2E5MWE2ZmM0Zjc1YjA4N2ZjMGVkZDlhZTJjNAA8TW9kdWxlPgBJbnB1
dElEAG1zY29ybGliAGRlZmF1bHRJbnN0YW5jZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJv
bUhhbmRsZQBJbnB1dE5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBn
ZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5n
c0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVi
dWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dz
YWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0
cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRy
aWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25z
QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJp
YnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBh
bnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0
RXhlY3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFN0cmluZwBnZXRfQ29udHJh
Y3RFbmRNb250aABnZXRfTGFiZWxDcmVhdGlvbk1vbnRoAGdldF9Db250cmFjdFN0YXJ0TW9udGgA
U3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDX2E4NzNjYTkxYTZmYzRmNzViMDg3ZmMwZWRkOWFlMmM0
LmRsbABnZXRfQ29udHJhY3RFbmRNb250aF9Jc051bGwAZ2V0X0xhYmVsQ3JlYXRpb25Nb250aF9J
c051bGwAZ2V0X0NvbnRyYWN0U3RhcnRNb250aF9Jc051bGwAc2V0X0NvbnRyYWN0RW5kTW9udGhT
dHJfSXNOdWxsAHNldF9MYWJlbENyZWF0aW9uTW9udGhTdHJfSXNOdWxsAHNldF9Db250cmFjdFN0
YXJ0TW9udGhTdHJfSXNOdWxsAFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAE1v
bnRoQXNzaWduAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6
YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTdHJpbmdD
b21wYXJpc29uAG1vbnRoTm8AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAASW5w
dXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2Vy
AC5jdG9yAC5jY3RvcgBzZXRfQ29udHJhY3RFbmRNb250aFN0cgBzZXRfTGFiZWxDcmVhdGlvbk1v
bnRoU3RyAHNldF9Db250cmFjdFN0YXJ0TW9udGhTdHIAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3Rl
bS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ19hODczY2E5MWE2
ZmM0Zjc1YjA4N2ZjMGVkZDlhZTJjNC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVi
dWdnaW5nTW9kZXMAU0NfYTg3M2NhOTFhNmZjNGY3NWIwODdmYzBlZGQ5YWUyYzQuUHJvcGVydGll
cwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdz
AEVxdWFscwBDb25uZWN0aW9ucwBPYmplY3QARW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVXNlckNv
bXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nl
c3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAZ2V0X0Fzc2VtYmx5AAAAAA9K
AGEAbgB1AGEAcgB5AAARRgBlAGIAcgB1AGEAcgB5AAALTQBhAHIAYwBoAAALQQBwAHIAaQBsAAAH
TQBhAHkAAAlKAHUAbgBlAAAJSgB1AGwAeQAADUEAdQBnAHUAcwB0AAATUwBlAHAAdABlAG0AYgBl
AHIAAA9PAGMAdABvAGIAZQByAAARTgBvAHYAZQBtAGIAZQByAAARRABlAGMAZQBtAGIAZQByAACA
m0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUA
dAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABv
ACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAA
AHFTAEMAXwBhADgANwAzAGMAYQA5ADEAYQA2AGYAYwA0AGYANwA1AGIAMAA4ADcAZgBjADAAZQBk
AGQAOQBhAGUAMgBjADQALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMA
AAZm5xufbpZIiHlNKqCxwAMABCABAQgDIAABBSABARERBCABAQ4FIAEBEVkDBwEOCSADARI9HQgS
QQMGEj0DBh0IBCABCAgEIAECCAUgAgEIHAMgAAIGIAICDhFxBSABHQgIBgABEnUReQQgABJ9BiAC
AQ4SfQi3elxWGTTgiQiJhF3NgIDMkQMGEhQDBhIYAwYSRQMGElEDBhJVAwYSIAUgAQESDAQgAQ4I
AyAACAQgAQECCSAEAQgOEj0SQQUgAQESRQQAABJRBAAAElUFAAEBElUEAAASIAMAAAEDKAAIAygA
AgMoAA4ECAASUQQIABJVBAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJv
d3MBCAEAAgAAAAAAKAEAI1NDX2E4NzNjYTkxYTZmYzRmNzViMDg3ZmMwZWRkOWFlMmM0AAAFAQAA
AAAWAQARQ29weXJpZ2h0IEAgIDIwMjIAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEA
VA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43BAEAAAAAAAC0AAAAzsrv
vgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJz
aW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0
ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBB
RFC0AAAAyDUAAAAAAAAAAAAA4jUAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAANQ1AAAAAAAAAAAA
AAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfAGEAOAA3ADMAYwBhADkAMQBhADYAZgBjADQAZgA3ADUAYgAwADgANwBmAGMAMABlAGQA
ZAA5AGEAZQAyAGMANAAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AYQA4ADcAMwBjAGEA
OQAxAGEANgBmAGMANABmADcANQBiADAAOAA3AGYAYwAwAGUAZABkADkAYQBlADIAYwA0AC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAyADIAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBhADgA
NwAzAGMAYQA5ADEAYQA2AGYAYwA0AGYANwA1AGIAMAA4ADcAZgBjADAAZQBkAGQAOQBhAGUAMgBj
ADQALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AYQA4ADcA
MwBjAGEAOQAxAGEANgBmAGMANABmADcANQBiADAAOAA3AGYAYwAwAGUAZABkADkAYQBlADIAYwA0
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAD0NQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_a873ca91a6fc4f75b087fc0edd9ae2c4</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">1A</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Populating MusicLabel Table\Month to str.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\Month to str.Inputs[Input 0].Columns[LabelCreationMonth]"
                      cachedDataType="i4"
                      cachedName="LabelCreationMonth"
                      lineageId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[LabelCreationMonth]" />
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\Month to str.Inputs[Input 0].Columns[ContractStartMonth]"
                      cachedDataType="i4"
                      cachedName="ContractStartMonth"
                      lineageId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[ContractStartMonth]" />
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\Month to str.Inputs[Input 0].Columns[ContractEndMonth]"
                      cachedDataType="i4"
                      cachedName="ContractEndMonth"
                      lineageId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[ContractEndMonth]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populating MusicLabel Table\Month to str.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Populating MusicLabel Table\Month to str.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\Month to str.Outputs[Output 0].Columns[LabelCreationMonthStr]"
                      codePage="1250"
                      dataType="str"
                      length="100"
                      lineageId="Package\Populating MusicLabel Table\Month to str.Outputs[Output 0].Columns[LabelCreationMonthStr]"
                      name="LabelCreationMonthStr" />
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\Month to str.Outputs[Output 0].Columns[ContractStartMonthStr]"
                      codePage="1250"
                      dataType="str"
                      length="100"
                      lineageId="Package\Populating MusicLabel Table\Month to str.Outputs[Output 0].Columns[ContractStartMonthStr]"
                      name="ContractStartMonthStr" />
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\Month to str.Outputs[Output 0].Columns[ContractEndMonthStr]"
                      codePage="1250"
                      dataType="str"
                      length="100"
                      lineageId="Package\Populating MusicLabel Table\Month to str.Outputs[Output 0].Columns[ContractEndMonthStr]"
                      name="ContractEndMonthStr" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB)"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="MusicLabel (SpotifyDB)"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[MusicLabel]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[localhost.SpotifyDB]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost.SpotifyDB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[LabelID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].ExternalColumns[LabelID]"
                      lineageId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[LabelID]"
                      name="LabelID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[LabelName]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].ExternalColumns[LabelName]"
                      length="100"
                      lineageId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[LabelName]"
                      name="LabelName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[MainGenre]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].ExternalColumns[MainGenre]"
                      length="100"
                      lineageId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[MainGenre]"
                      name="MainGenre"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[NumberOfSongs]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].ExternalColumns[NumberOfSongs]"
                      lineageId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[NumberOfSongs]"
                      name="NumberOfSongs"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[CreationDate]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].ExternalColumns[CreationDate]"
                      lineageId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[CreationDate]"
                      name="CreationDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[ContractStart]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].ExternalColumns[ContractStart]"
                      lineageId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[ContractStart]"
                      name="ContractStart"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[ContractEnd]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].ExternalColumns[ContractEnd]"
                      lineageId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[ContractEnd]"
                      name="ContractEnd"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[NumberOfArtists]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].ExternalColumns[NumberOfArtists]"
                      lineageId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[NumberOfArtists]"
                      name="NumberOfArtists"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[CostOfContract]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].ExternalColumns[CostOfContract]"
                      lineageId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[CostOfContract]"
                      name="CostOfContract"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].ExternalColumns[LabelID]"
                      dataType="i4"
                      name="LabelID" />
                    <externalMetadataColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].ExternalColumns[LabelName]"
                      codePage="1250"
                      dataType="str"
                      length="100"
                      name="LabelName" />
                    <externalMetadataColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].ExternalColumns[MainGenre]"
                      codePage="1250"
                      dataType="str"
                      length="100"
                      name="MainGenre" />
                    <externalMetadataColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].ExternalColumns[NumberOfSongs]"
                      dataType="i4"
                      name="NumberOfSongs" />
                    <externalMetadataColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].ExternalColumns[CreationDate]"
                      dataType="dbTimeStamp"
                      name="CreationDate" />
                    <externalMetadataColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].ExternalColumns[ContractStart]"
                      dataType="dbTimeStamp"
                      name="ContractStart" />
                    <externalMetadataColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].ExternalColumns[ContractEnd]"
                      dataType="dbTimeStamp"
                      name="ContractEnd" />
                    <externalMetadataColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].ExternalColumns[NumberOfArtists]"
                      dataType="i4"
                      name="NumberOfArtists" />
                    <externalMetadataColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].ExternalColumns[CostOfContract]"
                      dataType="r8"
                      name="CostOfContract" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Error Output].Columns[LabelID]"
                      dataType="i4"
                      lineageId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Error Output].Columns[LabelID]"
                      name="LabelID" />
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Error Output].Columns[LabelName]"
                      codePage="1250"
                      dataType="str"
                      length="100"
                      lineageId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Error Output].Columns[LabelName]"
                      name="LabelName" />
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Error Output].Columns[MainGenre]"
                      codePage="1250"
                      dataType="str"
                      length="100"
                      lineageId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Error Output].Columns[MainGenre]"
                      name="MainGenre" />
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Error Output].Columns[NumberOfSongs]"
                      dataType="i4"
                      lineageId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Error Output].Columns[NumberOfSongs]"
                      name="NumberOfSongs" />
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Error Output].Columns[CreationDate]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Error Output].Columns[CreationDate]"
                      name="CreationDate" />
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Error Output].Columns[ContractStart]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Error Output].Columns[ContractStart]"
                      name="ContractStart" />
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Error Output].Columns[ContractEnd]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Error Output].Columns[ContractEnd]"
                      name="ContractEnd" />
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Error Output].Columns[NumberOfArtists]"
                      dataType="i4"
                      lineageId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Error Output].Columns[NumberOfArtists]"
                      name="NumberOfArtists" />
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Error Output].Columns[CostOfContract]"
                      dataType="r8"
                      lineageId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Error Output].Columns[CostOfContract]"
                      name="CostOfContract" />
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW)"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="MusicLabel (SpotifyDW)"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[MusicLabel]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[localhost.SpotifyDW]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost.SpotifyDW]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Inputs[OLE DB Destination Input].Columns[LabelName]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="LabelName"
                      externalMetadataColumnId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Inputs[OLE DB Destination Input].ExternalColumns[Label_Name]"
                      lineageId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[LabelName]" />
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Inputs[OLE DB Destination Input].Columns[numSongs]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="numSongs"
                      externalMetadataColumnId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Inputs[OLE DB Destination Input].ExternalColumns[Number_Of_Songs]"
                      lineageId="Package\Populating MusicLabel Table\Converting ints to String.Outputs[Output 0].Columns[numSongs]" />
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Inputs[OLE DB Destination Input].Columns[MainGenre]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="MainGenre"
                      externalMetadataColumnId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Inputs[OLE DB Destination Input].ExternalColumns[Main_Genre]"
                      lineageId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output].Columns[MainGenre]" />
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Inputs[OLE DB Destination Input].Columns[numArtists]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="numArtists"
                      externalMetadataColumnId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Inputs[OLE DB Destination Input].ExternalColumns[Number_Of_Artists]"
                      lineageId="Package\Populating MusicLabel Table\Converting ints to String.Outputs[Output 0].Columns[numArtists]" />
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Inputs[OLE DB Destination Input].Columns[costContr]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="costContr"
                      externalMetadataColumnId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Inputs[OLE DB Destination Input].ExternalColumns[Cost_Of_Contract]"
                      lineageId="Package\Populating MusicLabel Table\Converting ints to String.Outputs[Output 0].Columns[costContr]" />
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Inputs[OLE DB Destination Input].Columns[Creation Date DW ID]"
                      cachedDataType="i4"
                      cachedName="Creation Date DW ID"
                      externalMetadataColumnId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Inputs[OLE DB Destination Input].ExternalColumns[ID_Creation_Date]"
                      lineageId="Package\Populating MusicLabel Table\Retrieving CreationDate ID.Outputs[Lookup Match Output].Columns[Creation Date DW ID]" />
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Inputs[OLE DB Destination Input].Columns[Contract Start Date DW ID]"
                      cachedDataType="i4"
                      cachedName="Contract Start Date DW ID"
                      externalMetadataColumnId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Inputs[OLE DB Destination Input].ExternalColumns[ID_Contract_Start]"
                      lineageId="Package\Populating MusicLabel Table\Retrieving ContractStartDate ID.Outputs[Lookup Match Output].Columns[Contract Start Date DW ID]" />
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Inputs[OLE DB Destination Input].Columns[Contract End Date DW ID]"
                      cachedDataType="i4"
                      cachedName="Contract End Date DW ID"
                      externalMetadataColumnId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Inputs[OLE DB Destination Input].ExternalColumns[ID_Contract_End]"
                      lineageId="Package\Populating MusicLabel Table\Retrieving ContractEndDate ID.Outputs[Lookup Match Output].Columns[Contract End Date DW ID]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Inputs[OLE DB Destination Input].ExternalColumns[LabelID]"
                      dataType="i4"
                      name="LabelID" />
                    <externalMetadataColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Inputs[OLE DB Destination Input].ExternalColumns[Label_Name]"
                      codePage="1250"
                      dataType="str"
                      length="100"
                      name="Label_Name" />
                    <externalMetadataColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Inputs[OLE DB Destination Input].ExternalColumns[Main_Genre]"
                      codePage="1250"
                      dataType="str"
                      length="100"
                      name="Main_Genre" />
                    <externalMetadataColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Inputs[OLE DB Destination Input].ExternalColumns[Number_Of_Songs]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      name="Number_Of_Songs" />
                    <externalMetadataColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Inputs[OLE DB Destination Input].ExternalColumns[ID_Creation_Date]"
                      dataType="i4"
                      name="ID_Creation_Date" />
                    <externalMetadataColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Inputs[OLE DB Destination Input].ExternalColumns[ID_Contract_Start]"
                      dataType="i4"
                      name="ID_Contract_Start" />
                    <externalMetadataColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Inputs[OLE DB Destination Input].ExternalColumns[ID_Contract_End]"
                      dataType="i4"
                      name="ID_Contract_End" />
                    <externalMetadataColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Inputs[OLE DB Destination Input].ExternalColumns[Number_Of_Artists]"
                      codePage="1250"
                      dataType="str"
                      length="100"
                      name="Number_Of_Artists" />
                    <externalMetadataColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Inputs[OLE DB Destination Input].ExternalColumns[Cost_Of_Contract]"
                      codePage="1250"
                      dataType="str"
                      length="100"
                      name="Cost_Of_Contract" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populating MusicLabel Table\Retrieving ContractEndDate ID"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Retrieving ContractEndDate ID"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[DateDimension]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[DateDimension]) [refTable]
where [refTable].[Days] = ? and [refTable].[Years] = ? and [refTable].[Months] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Days" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Months" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1250"/&gt;&lt;referenceColumn name="Years" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[ContractEndDay]};#{Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[ContractEndYear]};#{Package\Populating MusicLabel Table\Month to str.Outputs[Output 0].Columns[ContractEndMonthStr]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populating MusicLabel Table\Retrieving ContractEndDate ID.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[localhost.SpotifyDW]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost.SpotifyDW]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Populating MusicLabel Table\Retrieving ContractEndDate ID.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\Retrieving ContractEndDate ID.Inputs[Lookup Input].Columns[ContractEndDay]"
                      cachedDataType="i4"
                      cachedName="ContractEndDay"
                      lineageId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[ContractEndDay]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">Days</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\Retrieving ContractEndDate ID.Inputs[Lookup Input].Columns[ContractEndYear]"
                      cachedDataType="i4"
                      cachedName="ContractEndYear"
                      lineageId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[ContractEndYear]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">Years</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\Retrieving ContractEndDate ID.Inputs[Lookup Input].Columns[ContractEndMonthStr]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="ContractEndMonthStr"
                      lineageId="Package\Populating MusicLabel Table\Month to str.Outputs[Output 0].Columns[ContractEndMonthStr]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">Months</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populating MusicLabel Table\Retrieving ContractEndDate ID.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Populating MusicLabel Table\Retrieving ContractEndDate ID.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\Retrieving ContractEndDate ID.Outputs[Lookup Match Output].Columns[Contract End Date DW ID]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Populating MusicLabel Table\Retrieving ContractEndDate ID.Outputs[Lookup Match Output].Columns[Contract End Date DW ID]"
                      name="Contract End Date DW ID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ID</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Populating MusicLabel Table\Retrieving ContractEndDate ID.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Populating MusicLabel Table\Retrieving ContractEndDate ID.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Populating MusicLabel Table\Retrieving ContractEndDate ID.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Populating MusicLabel Table\Retrieving ContractEndDate ID.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\Retrieving ContractEndDate ID.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populating MusicLabel Table\Retrieving ContractEndDate ID.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\Retrieving ContractEndDate ID.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populating MusicLabel Table\Retrieving ContractEndDate ID.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populating MusicLabel Table\Retrieving ContractStartDate ID"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Retrieving ContractStartDate ID"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[DateDimension]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[DateDimension]) [refTable]
where [refTable].[Days] = ? and [refTable].[Years] = ? and [refTable].[Months] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Days" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Months" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1250"/&gt;&lt;referenceColumn name="Years" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[ContractStartDay]};#{Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[ContractStartYear]};#{Package\Populating MusicLabel Table\Month to str.Outputs[Output 0].Columns[ContractStartMonthStr]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populating MusicLabel Table\Retrieving ContractStartDate ID.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[localhost.SpotifyDW]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost.SpotifyDW]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Populating MusicLabel Table\Retrieving ContractStartDate ID.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\Retrieving ContractStartDate ID.Inputs[Lookup Input].Columns[ContractStartDay]"
                      cachedDataType="i4"
                      cachedName="ContractStartDay"
                      lineageId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[ContractStartDay]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">Days</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\Retrieving ContractStartDate ID.Inputs[Lookup Input].Columns[ContractStartYear]"
                      cachedDataType="i4"
                      cachedName="ContractStartYear"
                      lineageId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[ContractStartYear]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">Years</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\Retrieving ContractStartDate ID.Inputs[Lookup Input].Columns[ContractStartMonthStr]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="ContractStartMonthStr"
                      lineageId="Package\Populating MusicLabel Table\Month to str.Outputs[Output 0].Columns[ContractStartMonthStr]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">Months</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populating MusicLabel Table\Retrieving ContractStartDate ID.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Populating MusicLabel Table\Retrieving ContractStartDate ID.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\Retrieving ContractStartDate ID.Outputs[Lookup Match Output].Columns[Contract Start Date DW ID]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Populating MusicLabel Table\Retrieving ContractStartDate ID.Outputs[Lookup Match Output].Columns[Contract Start Date DW ID]"
                      name="Contract Start Date DW ID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ID</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Populating MusicLabel Table\Retrieving ContractStartDate ID.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Populating MusicLabel Table\Retrieving ContractStartDate ID.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Populating MusicLabel Table\Retrieving ContractStartDate ID.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Populating MusicLabel Table\Retrieving ContractStartDate ID.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\Retrieving ContractStartDate ID.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populating MusicLabel Table\Retrieving ContractStartDate ID.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\Retrieving ContractStartDate ID.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populating MusicLabel Table\Retrieving ContractStartDate ID.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Populating MusicLabel Table\Retrieving CreationDate ID"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Retrieving CreationDate ID"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[DateDimension]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[DateDimension]) [refTable]
where [refTable].[Days] = ? and [refTable].[Years] = ? and [refTable].[Months] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Days" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Months" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1250"/&gt;&lt;referenceColumn name="Years" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[LabelCreationDay]};#{Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[LabelCreationYear]};#{Package\Populating MusicLabel Table\Month to str.Outputs[Output 0].Columns[LabelCreationMonthStr]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Populating MusicLabel Table\Retrieving CreationDate ID.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[localhost.SpotifyDW]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost.SpotifyDW]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Populating MusicLabel Table\Retrieving CreationDate ID.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\Retrieving CreationDate ID.Inputs[Lookup Input].Columns[LabelCreationDay]"
                      cachedDataType="i4"
                      cachedName="LabelCreationDay"
                      lineageId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[LabelCreationDay]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">Days</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\Retrieving CreationDate ID.Inputs[Lookup Input].Columns[LabelCreationYear]"
                      cachedDataType="i4"
                      cachedName="LabelCreationYear"
                      lineageId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output].Columns[LabelCreationYear]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">Years</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Populating MusicLabel Table\Retrieving CreationDate ID.Inputs[Lookup Input].Columns[LabelCreationMonthStr]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="LabelCreationMonthStr"
                      lineageId="Package\Populating MusicLabel Table\Month to str.Outputs[Output 0].Columns[LabelCreationMonthStr]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">Months</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Populating MusicLabel Table\Retrieving CreationDate ID.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Populating MusicLabel Table\Retrieving CreationDate ID.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\Retrieving CreationDate ID.Outputs[Lookup Match Output].Columns[Creation Date DW ID]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Populating MusicLabel Table\Retrieving CreationDate ID.Outputs[Lookup Match Output].Columns[Creation Date DW ID]"
                      name="Creation Date DW ID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ID</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Populating MusicLabel Table\Retrieving CreationDate ID.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Populating MusicLabel Table\Retrieving CreationDate ID.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Populating MusicLabel Table\Retrieving CreationDate ID.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Populating MusicLabel Table\Retrieving CreationDate ID.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\Retrieving CreationDate ID.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Populating MusicLabel Table\Retrieving CreationDate ID.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Populating MusicLabel Table\Retrieving CreationDate ID.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Populating MusicLabel Table\Retrieving CreationDate ID.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Populating MusicLabel Table.Paths[Derived Column Output]"
              endId="Package\Populating MusicLabel Table\Month to str.Inputs[Input 0]"
              name="Derived Column Output"
              startId="Package\Populating MusicLabel Table\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\Populating MusicLabel Table.Paths[Lookup Match Output]"
              endId="Package\Populating MusicLabel Table\Retrieving ContractStartDate ID.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\Populating MusicLabel Table\Retrieving CreationDate ID.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Populating MusicLabel Table.Paths[Lookup Match Output1]"
              endId="Package\Populating MusicLabel Table\Retrieving ContractEndDate ID.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\Populating MusicLabel Table\Retrieving ContractStartDate ID.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Populating MusicLabel Table.Paths[Lookup Match Output2]"
              endId="Package\Populating MusicLabel Table\Drop Old values.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\Populating MusicLabel Table\Retrieving ContractEndDate ID.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Populating MusicLabel Table.Paths[Lookup No Match Output]"
              endId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW).Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\Populating MusicLabel Table\Drop Old values.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\Populating MusicLabel Table.Paths[OLE DB Source Output]"
              endId="Package\Populating MusicLabel Table\Converting ints to String.Inputs[Input 0]"
              name="OLE DB Source Output"
              startId="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB).Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Populating MusicLabel Table.Paths[Output 0]"
              endId="Package\Populating MusicLabel Table\Derived Column.Inputs[Derived Column Input]"
              name="Output 0"
              startId="Package\Populating MusicLabel Table\Converting ints to String.Outputs[Output 0]" />
            <path
              refId="Package\Populating MusicLabel Table.Paths[Output 01]"
              endId="Package\Populating MusicLabel Table\Retrieving CreationDate ID.Inputs[Lookup Input]"
              name="Output 0"
              startId="Package\Populating MusicLabel Table\Month to str.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="212,42"
          Id="Package\Populating MusicLabel Table"
          TopLeft="345,57" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Populating MusicLabel Table">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="175,45"
          Id="Package\Populating MusicLabel Table\Drop Old values"
          TopLeft="226,681" />
        <NodeLayout
          Size="191,42"
          Id="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW)"
          TopLeft="220,770" />
        <NodeLayout
          Size="175,67"
          Id="Package\Populating MusicLabel Table\Retrieving CreationDate ID"
          TopLeft="223,358" />
        <NodeLayout
          Size="154,42"
          Id="Package\Populating MusicLabel Table\Derived Column"
          TopLeft="233,189" />
        <NodeLayout
          Size="163,42"
          Id="Package\Populating MusicLabel Table\Converting ints to String"
          TopLeft="231,108" />
        <NodeLayout
          Size="188,42"
          Id="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB)"
          TopLeft="218,29" />
        <EdgeLayout
          Id="Package\Populating MusicLabel Table.Paths[OLE DB Source Output]"
          TopLeft="312.25,71">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37"
              Start="0,0"
              End="0,29.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populating MusicLabel Table.Paths[Lookup No Match Output]"
          TopLeft="314.5,726">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44"
              Start="0,0"
              End="0,36.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,12.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populating MusicLabel Table.Paths[Output 0]"
          TopLeft="311.25,150">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39"
              Start="0,0"
              End="0,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="137,42"
          Id="Package\Populating MusicLabel Table\Month to str"
          TopLeft="235,270" />
        <EdgeLayout
          Id="Package\Populating MusicLabel Table.Paths[Derived Column Output]"
          TopLeft="306.75,231">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39"
              Start="0,0"
              End="0,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populating MusicLabel Table.Paths[Output 01]"
          TopLeft="307,312">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46"
              Start="0,0"
              End="0,38.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="228,42"
          Id="Package\Populating MusicLabel Table\Retrieving ContractStartDate ID"
          TopLeft="202,474" />
        <EdgeLayout
          Id="Package\Populating MusicLabel Table.Paths[Lookup Match Output]"
          TopLeft="313.25,425">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49"
              Start="0,0"
              End="0,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,14.9453125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="224,42"
          Id="Package\Populating MusicLabel Table\Retrieving ContractEndDate ID"
          TopLeft="204,591" />
        <EdgeLayout
          Id="Package\Populating MusicLabel Table.Paths[Lookup Match Output1]"
          TopLeft="316,516">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,75"
              Start="0,0"
              End="0,67.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,67.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,27.9453125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Populating MusicLabel Table.Paths[Lookup Match Output2]"
          TopLeft="314.75,633">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48"
              Start="0,0"
              End="0,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,14.4453125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Populating MusicLabel Table\Drop Old values">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[MusicLabel]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populating MusicLabel Table\MusicLabel (SpotifyDW)">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populating MusicLabel Table\Retrieving CreationDate ID">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[DateDimension]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populating MusicLabel Table\MusicLabel (SpotifyDB)">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populating MusicLabel Table\Retrieving ContractStartDate ID">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[DateDimension]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Populating MusicLabel Table\Retrieving ContractEndDate ID">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[DateDimension]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>